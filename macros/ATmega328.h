// This file was autogenerated from ATmega328.conf. Do not edit manually!
#define SET_BIT_0(name) name ## _reg &= ~(1<<name)
#define SET_BIT_1(name) name ## _reg |= (1<<name)
// registers for all used bit names
#define CS20_reg TCCR2B
#define CS21_reg TCCR2B
#define CS22_reg TCCR2B
#define TOIE1_reg TIMSK1
#define WGM11_reg TCCR1A
#define WGM10_reg TCCR1A
#define WGM13_reg TCCR1B
#define WGM12_reg TCCR1B
#define DORD0_reg SPCR0
#define CS02_reg TCCR0B
#define OCR2AUB_reg ASSR
#define CS00_reg TCCR0B
#define CS01_reg TCCR0B
#define COM2A0_reg TCCR2A
#define COM2A1_reg TCCR2A
#define CPHA0_reg SPCR0
#define TCR2AUB_reg ASSR
#define OCIE2A_reg TIMSK2
#define FOC0A_reg TCCR0B
#define FOC0B_reg TCCR0B
#define COM0A0_reg TCCR0A
#define COM0A1_reg TCCR0A
#define TOIE2_reg TIMSK2
#define TOIE0_reg TIMSK0
#define OC0A_reg TIFR0
#define FOC2B_reg TCCR2B
#define FOC2A_reg TCCR2B
#define SPI2X0_reg SPSR0
#define ICNC1_reg TCCR1B
#define COM1A1_reg TCCR1A
#define COM1A0_reg TCCR1A
#define OCIE1B_reg TIMSK1
#define CPOL0_reg SPCR0
#define AS2_reg ASSR
#define WCOL0_reg SPSR0
#define WGM02_reg TCCR0B
#define SPIF0_reg SPSR0
#define WGM00_reg TCCR0A
#define WGM01_reg TCCR0A
#define CS11_reg TCCR1B
#define CS10_reg TCCR1B
#define CS12_reg TCCR1B
#define WGM20_reg TCCR2A
#define WGM21_reg TCCR2A
#define WGM22_reg TCCR2B
#define SPR00_reg SPCR0
#define COM0B1_reg TCCR0A
#define FOC1A_reg TCCR1C
#define EXCLK_reg ASSR
#define SPE0_reg SPCR0
#define TCN2UB_reg ASSR
#define TOV0_reg TIFR0
#define COM2B1_reg TCCR2A
#define COM2B0_reg TCCR2A
#define FOC1B_reg TCCR1C
#define SPIE0_reg SPCR0
#define OCIE0A_reg TIMSK0
#define COM1B0_reg TCCR1A
#define COM1B1_reg TCCR1A
#define ICIE1_reg TIMSK1
#define ICES1_reg TCCR1B
#define MSTR0_reg SPCR0
#define OCIE1A_reg TIMSK1
#define OCR2BUB_reg ASSR
#define OCIE0B_reg TIMSK0
#define COM0B0_reg TCCR0A
#define OCF0B_reg TIFR0
#define TCR2BUB_reg ASSR
#define OCIE2B_reg TIMSK2
#define SPR01_reg SPCR0

// timer0_mode

inline void timer0_mode_normal()
{
	TCCR0B &= ~(1<<WGM02);
	TCCR0A &= ~(1<<WGM01);
	TCCR0A &= ~(1<<WGM00);
}

inline void timer0_mode_pwm_phasecorrect_until_0xFF()
{
	TCCR0B &= ~(1<<WGM02);
	TCCR0A &= ~(1<<WGM01);
	TCCR0A |=  (1<<WGM00);
}

inline void timer0_mode_ctc()
{
	TCCR0B &= ~(1<<WGM02);
	TCCR0A |=  (1<<WGM01);
	TCCR0A &= ~(1<<WGM00);
}

inline void timer0_mode_fast_pwm_until_0xFF()
{
	TCCR0B &= ~(1<<WGM02);
	TCCR0A |=  (1<<WGM01);
	TCCR0A |=  (1<<WGM00);
}

inline void timer0_mode_pwm_phasecorrect_until_OCR0A()
{
	TCCR0B |=  (1<<WGM02);
	TCCR0A &= ~(1<<WGM01);
	TCCR0A |=  (1<<WGM00);
}

inline void timer0_mode_fast_pwm_until_OCR0A()
{
	TCCR0B |=  (1<<WGM02);
	TCCR0A |=  (1<<WGM01);
	TCCR0A |=  (1<<WGM00);
}

// timer0_clockselect

inline void timer0_clockselect_none()
{
	TCCR0B &= ~(1<<CS02);
	TCCR0B &= ~(1<<CS01);
	TCCR0B &= ~(1<<CS00);
}

inline void timer0_clockselect_io_1()
{
	TCCR0B &= ~(1<<CS02);
	TCCR0B &= ~(1<<CS01);
	TCCR0B |=  (1<<CS00);
}

inline void timer0_clockselect_io_8()
{
	TCCR0B &= ~(1<<CS02);
	TCCR0B |=  (1<<CS01);
	TCCR0B &= ~(1<<CS00);
}

inline void timer0_clockselect_io_64()
{
	TCCR0B &= ~(1<<CS02);
	TCCR0B |=  (1<<CS01);
	TCCR0B |=  (1<<CS00);
}

inline void timer0_clockselect_io_256()
{
	TCCR0B |=  (1<<CS02);
	TCCR0B &= ~(1<<CS01);
	TCCR0B &= ~(1<<CS00);
}

inline void timer0_clockselect_io_1024()
{
	TCCR0B |=  (1<<CS02);
	TCCR0B &= ~(1<<CS01);
	TCCR0B |=  (1<<CS00);
}

inline void timer0_clockselect_on_falling_T0()
{
	TCCR0B |=  (1<<CS02);
	TCCR0B |=  (1<<CS01);
	TCCR0B &= ~(1<<CS00);
}

inline void timer0_clockselect_on_rising_T0()
{
	TCCR0B |=  (1<<CS02);
	TCCR0B |=  (1<<CS01);
	TCCR0B |=  (1<<CS00);
}

// timer0_out_A

inline void timer0_out_A_no_pwm()
{
	TCCR0A &= ~(1<<COM0A1);
	TCCR0A &= ~(1<<COM0A0);
}

inline void timer0_out_A_clear_on_compare_match()
{
	TCCR0A |=  (1<<COM0A1);
	TCCR0A &= ~(1<<COM0A0);
}

inline void timer0_out_A_set_on_compare_match()
{
	TCCR0A |=  (1<<COM0A1);
	TCCR0A |=  (1<<COM0A0);
}

// timer0_out_B

inline void timer0_out_B_no_pwm()
{
	TCCR0A &= ~(1<<COM0B1);
	TCCR0A &= ~(1<<COM0B0);
}

inline void timer0_out_B_clear_on_compare_match()
{
	TCCR0A |=  (1<<COM0B1);
	TCCR0A &= ~(1<<COM0B0);
}

inline void timer0_out_B_set_on_compare_match()
{
	TCCR0A |=  (1<<COM0B1);
	TCCR0A |=  (1<<COM0B0);
}

// timer1_mode

inline void timer1_mode_normal()
{
	TCCR1B &= ~(1<<WGM13);
	TCCR1B &= ~(1<<WGM12);
	TCCR1A &= ~(1<<WGM11);
	TCCR1A &= ~(1<<WGM10);
}

inline void timer1_mode_pwm_phasecorrect_until_0x00FF()
{
	TCCR1B &= ~(1<<WGM13);
	TCCR1B &= ~(1<<WGM12);
	TCCR1A &= ~(1<<WGM11);
	TCCR1A |=  (1<<WGM10);
}

inline void timer1_mode_pwm_phasecorrect_until_0x01FF()
{
	TCCR1B &= ~(1<<WGM13);
	TCCR1B &= ~(1<<WGM12);
	TCCR1A |=  (1<<WGM11);
	TCCR1A &= ~(1<<WGM10);
}

inline void timer1_mode_pwm_phasecorrect_until_0x03FF()
{
	TCCR1B &= ~(1<<WGM13);
	TCCR1B &= ~(1<<WGM12);
	TCCR1A |=  (1<<WGM11);
	TCCR1A |=  (1<<WGM10);
}

inline void timer1_mode_ctc_until_OCR1A()
{
	TCCR1B &= ~(1<<WGM13);
	TCCR1B |=  (1<<WGM12);
	TCCR1A &= ~(1<<WGM11);
	TCCR1A &= ~(1<<WGM10);
}

inline void timer1_mode_pwm_fast_until_0x00FF()
{
	TCCR1B &= ~(1<<WGM13);
	TCCR1B |=  (1<<WGM12);
	TCCR1A &= ~(1<<WGM11);
	TCCR1A |=  (1<<WGM10);
}

inline void timer1_mode_pwm_fast_until_0x01FF()
{
	TCCR1B &= ~(1<<WGM13);
	TCCR1B |=  (1<<WGM12);
	TCCR1A |=  (1<<WGM11);
	TCCR1A &= ~(1<<WGM10);
}

inline void timer1_mode_pwm_fast_until_0x03FF()
{
	TCCR1B &= ~(1<<WGM13);
	TCCR1B |=  (1<<WGM12);
	TCCR1A |=  (1<<WGM11);
	TCCR1A |=  (1<<WGM10);
}

inline void timer1_mode_pwm_phasefrequencycorrect_until_ICR1()
{
	TCCR1B |=  (1<<WGM13);
	TCCR1B &= ~(1<<WGM12);
	TCCR1A &= ~(1<<WGM11);
	TCCR1A &= ~(1<<WGM10);
}

inline void timer1_mode_pwm_phasefrequencycorrect_until_OCR1A()
{
	TCCR1B |=  (1<<WGM13);
	TCCR1B &= ~(1<<WGM12);
	TCCR1A &= ~(1<<WGM11);
	TCCR1A |=  (1<<WGM10);
}

inline void timer1_mode_pwm_phasecorrect_until_ICR1()
{
	TCCR1B |=  (1<<WGM13);
	TCCR1B &= ~(1<<WGM12);
	TCCR1A |=  (1<<WGM11);
	TCCR1A &= ~(1<<WGM10);
}

inline void timer1_mode_pwm_phasecorrect_until_OCR1A()
{
	TCCR1B |=  (1<<WGM13);
	TCCR1B &= ~(1<<WGM12);
	TCCR1A |=  (1<<WGM11);
	TCCR1A |=  (1<<WGM10);
}

inline void timer1_mode_ctc_until_ICR1()
{
	TCCR1B |=  (1<<WGM13);
	TCCR1B |=  (1<<WGM12);
	TCCR1A &= ~(1<<WGM11);
	TCCR1A &= ~(1<<WGM10);
}

inline void timer1_mode_pwm_fast_until_ICR1()
{
	TCCR1B |=  (1<<WGM13);
	TCCR1B |=  (1<<WGM12);
	TCCR1A |=  (1<<WGM11);
	TCCR1A &= ~(1<<WGM10);
}

inline void timer1_mode_pwm_fast_until_OCR1A()
{
	TCCR1B |=  (1<<WGM13);
	TCCR1B |=  (1<<WGM12);
	TCCR1A |=  (1<<WGM11);
	TCCR1A |=  (1<<WGM10);
}

// timer1_clockselect

inline void timer1_clockselect_none()
{
	TCCR1B &= ~(1<<CS12);
	TCCR1B &= ~(1<<CS11);
	TCCR1B &= ~(1<<CS10);
}

inline void timer1_clockselect_io_1()
{
	TCCR1B &= ~(1<<CS12);
	TCCR1B &= ~(1<<CS11);
	TCCR1B |=  (1<<CS10);
}

inline void timer1_clockselect_io_8()
{
	TCCR1B &= ~(1<<CS12);
	TCCR1B |=  (1<<CS11);
	TCCR1B &= ~(1<<CS10);
}

inline void timer1_clockselect_io_64()
{
	TCCR1B &= ~(1<<CS12);
	TCCR1B |=  (1<<CS11);
	TCCR1B |=  (1<<CS10);
}

inline void timer1_clockselect_io_256()
{
	TCCR1B |=  (1<<CS12);
	TCCR1B &= ~(1<<CS11);
	TCCR1B &= ~(1<<CS10);
}

inline void timer1_clockselect_io_1024()
{
	TCCR1B |=  (1<<CS12);
	TCCR1B &= ~(1<<CS11);
	TCCR1B |=  (1<<CS10);
}

inline void timer1_clockselect_on_falling_T1()
{
	TCCR1B |=  (1<<CS12);
	TCCR1B |=  (1<<CS11);
	TCCR1B &= ~(1<<CS10);
}

inline void timer1_clockselect_on_rising_T1()
{
	TCCR1B |=  (1<<CS12);
	TCCR1B |=  (1<<CS11);
	TCCR1B |=  (1<<CS10);
}

// timer1_out_A

inline void timer1_out_A_no_pwm()
{
	TCCR1A &= ~(1<<COM1A1);
	TCCR1A &= ~(1<<COM1A0);
}

inline void timer1_out_A_clear_on_compare_match()
{
	TCCR1A |=  (1<<COM1A1);
	TCCR1A &= ~(1<<COM1A0);
}

inline void timer1_out_A_set_on_compare_match()
{
	TCCR1A |=  (1<<COM1A1);
	TCCR1A |=  (1<<COM1A0);
}

// timer1_out_B

inline void timer1_out_B_no_pwm()
{
	TCCR1A &= ~(1<<COM1B1);
	TCCR1A &= ~(1<<COM1B0);
}

inline void timer1_out_B_clear_on_compare_match()
{
	TCCR1A |=  (1<<COM1B1);
	TCCR1A &= ~(1<<COM1B0);
}

inline void timer1_out_B_set_on_compare_match()
{
	TCCR1A |=  (1<<COM1B1);
	TCCR1A |=  (1<<COM1B0);
}

// timer2_mode

inline void timer2_mode_normal()
{
	TCCR2B &= ~(1<<WGM22);
	TCCR2A &= ~(1<<WGM21);
	TCCR2A &= ~(1<<WGM20);
}

inline void timer2_mode_pwm_phasecorrect_until_0xFF()
{
	TCCR2B &= ~(1<<WGM22);
	TCCR2A &= ~(1<<WGM21);
	TCCR2A |=  (1<<WGM20);
}

inline void timer2_mode_ctc_until_OCR2A()
{
	TCCR2B &= ~(1<<WGM22);
	TCCR2A |=  (1<<WGM21);
	TCCR2A &= ~(1<<WGM20);
}

inline void timer2_mode_pwm_fast_until_0xFF()
{
	TCCR2B &= ~(1<<WGM22);
	TCCR2A |=  (1<<WGM21);
	TCCR2A |=  (1<<WGM20);
}

inline void timer2_mode_pwm_phasecorrect_until_OCR2A()
{
	TCCR2B |=  (1<<WGM22);
	TCCR2A &= ~(1<<WGM21);
	TCCR2A |=  (1<<WGM20);
}

inline void timer2_mode_pwm_fast_until_OCR2A()
{
	TCCR2B |=  (1<<WGM22);
	TCCR2A |=  (1<<WGM21);
	TCCR2A |=  (1<<WGM20);
}

// timer2_clockselect

inline void timer2_clockselect_none()
{
	TCCR2B &= ~(1<<CS22);
	TCCR2B &= ~(1<<CS21);
	TCCR2B &= ~(1<<CS20);
}

inline void timer2_clockselect_t2clk_1()
{
	TCCR2B &= ~(1<<CS22);
	TCCR2B &= ~(1<<CS21);
	TCCR2B |=  (1<<CS20);
}

inline void timer2_clockselect_t2clk_8()
{
	TCCR2B &= ~(1<<CS22);
	TCCR2B |=  (1<<CS21);
	TCCR2B &= ~(1<<CS20);
}

inline void timer2_clockselect_t2clk_32()
{
	TCCR2B &= ~(1<<CS22);
	TCCR2B |=  (1<<CS21);
	TCCR2B |=  (1<<CS20);
}

inline void timer2_clockselect_t2clk_64()
{
	TCCR2B |=  (1<<CS22);
	TCCR2B &= ~(1<<CS21);
	TCCR2B &= ~(1<<CS20);
}

inline void timer2_clockselect_t2clk_128()
{
	TCCR2B |=  (1<<CS22);
	TCCR2B &= ~(1<<CS21);
	TCCR2B |=  (1<<CS20);
}

inline void timer2_clockselect_t2clk_256()
{
	TCCR2B |=  (1<<CS22);
	TCCR2B |=  (1<<CS21);
	TCCR2B &= ~(1<<CS20);
}

inline void timer2_clockselect_t2clk_1024()
{
	TCCR2B |=  (1<<CS22);
	TCCR2B |=  (1<<CS21);
	TCCR2B |=  (1<<CS20);
}

// interrupts


inline void int_timer0_compA_enable()
{
	TIMSK0 |=  (1<<OCIE0A);
}

inline void int_timer0_compA_disable()
{
	TIMSK0 &= ~(1<<OCIE0A);
}

inline void int_timer0_compB_enable()
{
	TIMSK0 |=  (1<<OCIE0B);
}

inline void int_timer0_compB_disable()
{
	TIMSK0 &= ~(1<<OCIE0B);
}

inline void int_timer0_overflow_enable()
{
	TIMSK0 |=  (1<<TOIE0);
}

inline void int_timer0_overflow_disable()
{
	TIMSK0 &= ~(1<<TOIE0);
}

inline void int_timer1_input_capture_enable()
{
	TIMSK1 |=  (1<<ICIE1);
}

inline void int_timer1_input_capture_disable()
{
	TIMSK1 &= ~(1<<ICIE1);
}

inline void int_timer1_compA_enable()
{
	TIMSK1 |=  (1<<OCIE1A);
}

inline void int_timer1_compA_disable()
{
	TIMSK1 &= ~(1<<OCIE1A);
}

inline void int_timer1_compB_enable()
{
	TIMSK1 |=  (1<<OCIE1B);
}

inline void int_timer1_compB_disable()
{
	TIMSK1 &= ~(1<<OCIE1B);
}

inline void int_timer1_overflow_enable()
{
	TIMSK1 |=  (1<<TOIE1);
}

inline void int_timer1_overflow_disable()
{
	TIMSK1 &= ~(1<<TOIE1);
}
